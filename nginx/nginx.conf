user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

	# 백엔드 upstream 설정
    upstream api-server {
        server api-server:5000;
    }

	# 프론트엔드 upstream 설정
    upstream front-server {
        server front-server:8081;
    }

    server {
        listen 3000;

		# /api 경로로 오는 요청을 백엔드 upstream 의 /api 경로로 포워딩
        location /api {
            proxy_pass         http://api-server/api;
        }
        # webpack-dev-server socket 통신용
        location /ws {
            proxy_pass         http://front-server/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        # socket io 통신용
        location /api/socket.io {
            proxy_pass         http://api-server/socket.io;
            # websocket 통신
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
		# / 경로로 오는 요청을 프론트엔드 upstream 의 / 경로로 포워딩
        location / {
            proxy_pass         http://front-server/;
        }
    }
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        off;
    keepalive_timeout  65;
    include /etc/nginx/conf.d/*.conf;
}